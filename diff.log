diff --git a/kernel.sym b/kernel.sym
deleted file mode 100755
index ae950c4..0000000
Binary files a/kernel.sym and /dev/null differ
diff --git a/kernel/devices/apic.c b/kernel/devices/apic.c
index 992a41f..fa760c4 100644
--- a/kernel/devices/apic.c
+++ b/kernel/devices/apic.c
@@ -4,6 +4,7 @@
 #include <pic.h>
 #include <pit.h>
 #include <isr.h>
+#include <print.h>
 #include <stdint.h>
 
 #define IA32_APIC_BASE_MSR 0x1B
@@ -11,7 +12,8 @@
 #define IA32_APIC_BASE_MSR_ENABLE 0x800
 #define APIC_EOI_REGISTER 0xB0
 
-enum {
+enum 
+{
     CPUID_FEAT_ECX_SSE3         = 1 << 0, 
     CPUID_FEAT_ECX_PCLMUL       = 1 << 1,
     CPUID_FEAT_ECX_DTES64       = 1 << 2,
@@ -144,14 +146,14 @@ void writeAPICRegister(uint32_t reg, uint32_t value)
     *((volatile uint32_t *)(cpuGetAPICBase() + reg)) = value;
 }
 
-void enableAPIC(void) {
+void enableAPIC(void) 
+{
     term_write("Enabling APIC\n", 14);
-    // remap and disable PIC
+    // disable PIC
     asm volatile ("mov $0xff, %al;"
 		  "out %al, $0xa1;"
 		  "out %al, $0x21;");
     disableAllIRQs();
-    remapPIC(0x20, 0x28);
     /* Hardware enable the Local APIC if it wasn't enabled */
     cpuSetAPICBase(cpuGetAPICBase());
     char x[20];
@@ -167,12 +169,13 @@ void enableAPIC(void) {
 static void APIC_timer_callback(InterruptFrame* frame)
 {
     // do timer stuff
-    term_write(".", 1);
+    term_write(",", 1);
 }
 
-void enableAPICTimer(uint32_t frequency) {
-    // Enable APIC Timer
+void enableAPICTimer(uint32_t frequency) 
+{
     initPIT(frequency);
+    // Enable APIC Timer
     writeAPICRegister(0x3E0, 0x3);
     writeAPICRegister(0x380, 0xFFFFFFFF);
     // Sleep for 10 ms
diff --git a/kernel/devices/apic.h b/kernel/devices/apic.h
index fbe38d8..1b76a32 100644
--- a/kernel/devices/apic.h
+++ b/kernel/devices/apic.h
@@ -2,12 +2,9 @@
 
 // https://wiki.osdev.org/APIC#IO_APIC_Registers
 
-static int cpuHasMSR();
 void cpuGetMSR(uint32_t msr, uint32_t *lo, uint32_t *hi);
 void cpuSetMSR(uint32_t msr, uint32_t lo, uint32_t hi);
 uintptr_t cpuGetAPICBase(); 
-static int getModel(void);
-static int checkAPIC(void);
 void cpuSetAPICBase(uintptr_t apic);
 uint32_t readAPICRegister(uint32_t reg);
 void writeAPICRegister(uint32_t reg, uint32_t value);
diff --git a/kernel/devices/ioapic.c b/kernel/devices/ioapic.c
index 3b0ef40..010eb57 100644
--- a/kernel/devices/ioapic.c
+++ b/kernel/devices/ioapic.c
@@ -1,12 +1,11 @@
-#include <stdint.h>
-#include <stddef.h>
 #include <apic.h>
 #include <ioapic.h>
-#include <pic.h>
-#include <kernel.h>
 #include <isr.h>
-
-extern void* irq_stub_table[];
+#include <kernel.h>
+#include <pic.h>
+#include <print.h>
+#include <stddef.h>
+#include <stdint.h>
 
 uint32_t readIOAPIC(size_t ioapicaddr, uint32_t reg)
 {
@@ -22,18 +21,21 @@ void writeIOAPIC(size_t ioapicaddr, uint32_t reg, uint32_t value)
     ioapic[4] = value;
 }
 
-static void keyboardHandler(InterruptFrame* frame) {
+static void keyboardHandler(InterruptFrame* frame) 
+{
     writeAPICRegister(0xB0, 0);
     term_write(".", 1);
 }
 
-void readIOREDTBLs(size_t ioapicaddr) {
+void readIOREDTBLs(size_t ioapicaddr) 
+{
     char x[20];
     uint32_t IOAPICID = readIOAPIC(ioapicaddr, 0x0);
     uint32_t IOAPICVER = readIOAPIC(ioapicaddr, 0x1);
     printNumber(IOAPICID, x);
     printNumber(IOAPICVER, x);
-    for (uint8_t i=0; i < 8; i++) {
+    for (uint8_t i=0; i < 8; i++) 
+    {
 	term_write("IRQ ", 4);
 	printNumber(i, x);
         uint32_t redirection_entry_1 = readIOAPIC(ioapicaddr, 0x10 + i);
@@ -43,7 +45,8 @@ void readIOREDTBLs(size_t ioapicaddr) {
     }
 }
 
-void enableKeyboard(size_t ioapicaddr) {
+void enableKeyboard(size_t ioapicaddr) 
+{
     //readIOREDTBLs(ioapicaddr);
     writeIOAPIC(ioapicaddr, 0x12, 0x21);
     register_interrupt_handler(0x21, &keyboardHandler);
diff --git a/kernel/devices/pit.c b/kernel/devices/pit.c
index 8f13d93..54394dd 100644
--- a/kernel/devices/pit.c
+++ b/kernel/devices/pit.c
@@ -8,7 +8,6 @@ uint32_t frequency = 1193180;
 static void PIT_callback(InterruptFrame* frame)
 {
     // Do something here
-    term_write(".", 1);
 }
 
 void initPIT(uint32_t new_frequency)
diff --git a/kernel/devices/pit.h b/kernel/devices/pit.h
index 15deb1e..7f8f714 100644
--- a/kernel/devices/pit.h
+++ b/kernel/devices/pit.h
@@ -1,4 +1,4 @@
 #include <stdint.h>
 
-void initTimer(uint32_t frequency);
+void initPIT(uint32_t frequency);
 uint32_t PIT_sleep(uint64_t milliseconds);
diff --git a/kernel/devices/ps2.c b/kernel/devices/ps2.c
index 7546034..443ec1a 100644
--- a/kernel/devices/ps2.c
+++ b/kernel/devices/ps2.c
@@ -1,6 +1,7 @@
 #include <stdint.h>
 #include <pic.h>
 #include <kernel.h>
+#include <print.h>
 #include <isr.h>
 #include <ps2.h>
 
diff --git a/kernel/interfaces/description_tables/madt.c b/kernel/interfaces/description_tables/madt.c
index cee3919..70f7739 100644
--- a/kernel/interfaces/description_tables/madt.c
+++ b/kernel/interfaces/description_tables/madt.c
@@ -1,6 +1,5 @@
 #include <stdint.h>
 #include <madt.h>
-#include <isr.h>
 
 MADT* madt;
 
@@ -23,7 +22,6 @@ void parseMADT()
     uint32_t length = sizeof(MADT);
     uintptr_t madt_address = (uintptr_t) madt;
 
-    char x[20];
     // array pointers
     int i, j, k, l, m, n, o;
     i = j = k = l = m = n = o = 0;
diff --git a/kernel/interrupts/idt.c b/kernel/interrupts/idt.c
index 7ba9d8d..be5d9c1 100644
--- a/kernel/interrupts/idt.c
+++ b/kernel/interrupts/idt.c
@@ -1,7 +1,6 @@
 #include <stdint.h>
 #include <idt.h>
 #include <pic.h>
-#include <isr.h>
 
 extern void* isr_stub_table[];
 extern void* irq_stub_table[];
@@ -35,6 +34,7 @@ void initIdt()
     {
         setIdtEntry(&idt_entries[i], (uint64_t)irq_stub_table[i-32], 0x28, 0, 0x8E);
     }
+    remapPIC(0x20, 0x28);
     asm volatile("lidt %0" : : "m"(idt_ptr));
     asm volatile("sti");
 }
diff --git a/kernel/interrupts/isr.c b/kernel/interrupts/isr.c
index 3271b5d..98af488 100644
--- a/kernel/interrupts/isr.c
+++ b/kernel/interrupts/isr.c
@@ -1,60 +1,12 @@
+#include <stdint.h>
 #include <kernel.h>
 #include <isr.h>
-#include <pic.h>
+#include <print.h>
+// #include <pic.h>
 #include <stdint.h>
 
 void (*interrupt_handlers[256]) (InterruptFrame* frame);
 
-size_t strlen(char* s) {
-    size_t len = 0;
-    while(s[len] != '\0') {len++;};
-    return len;
-}
-
-void reverse(char* s) {
-    int i, j;
-    char tmp;
-    for (i=0,j=strlen(s)-1; i < j; i++, j--){
-        tmp = s[i];
-        s[i] = s[j];
-        s[j] = tmp;
-    }
-    
-}
-
-void itoa(int value, char* str, int base) {
-    int i = 0;
-    int sign;
-    if ((sign = value) < 0) {
-        value = -value;
-    }
-    do {
-        str[i++] = value % base + '0';
-        
-    } while ((value /= base) > 0);
-
-    if (sign < 0)
-        str[i++] = '-';
-
-    str[i] = '\0';
-    reverse(str);
-}
-
-void uint64toa(uint64_t value, char* str, int base) {
-    int i = 0;
-    do {
-        str[i++] = value % base + '0';
-    } while ((value /= base) > 0);
-    str[i] = '\0';
-    reverse(str);
-}
-
-void printNumber(uint64_t num, char* x) {
-    uint64toa(num, x, 10);
-    term_write(x, strlen(x));
-    term_write("\n", 1);
-}
-
 void exception_handler(InterruptFrame* frame) {
     char x[20];
     printNumber(frame->int_no, x);
diff --git a/kernel/kernel.c b/kernel/kernel.c
index 216b2ce..5747a78 100644
--- a/kernel/kernel.c
+++ b/kernel/kernel.c
@@ -1,14 +1,14 @@
-#include <stdint.h>
-#include <stddef.h>
-#include <stivale2.h>
-#include <pit.h>
-#include <isr.h>
-#include <pic.h>
+#include <apic.h>
 #include <idt.h>
-#include <ps2.h>
-#include <madt.h>
 #include <ioapic.h>
-#include <apic.h>
+#include <madt.h>
+#include <pic.h>
+#include <pit.h>
+#include <print.h>
+#include <ps2.h>
+#include <stddef.h>
+#include <stdint.h>
+#include <stivale2.h>
 
 extern RSDPDescriptor20 *rsdp_descriptor;
 extern XSDT* xsdt;
@@ -215,11 +215,9 @@ void _start(struct stivale2_struct *stivale2_struct) {
     term_write("results done\n", 14);
 
     // Initialize devices
-    initKeyboard();
-    remapPIC(0x20, 0x28);
     initIdt();
     enableAPIC();
-    enableKeyboard(ioapics[0]->address);
+    enableAPICTimer(5000);
     // enableAPICTimer(5000);
     for (;;) {
 	asm volatile ("hlt");
